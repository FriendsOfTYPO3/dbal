Portability issues:
- AUTO_INCREMENT: Sequence generation is ux_t3lib_db::exec_INSERTquery(); We need to generate any unique ids for records in this function when ADOdb/PEAR is used, using other databases than MySQL. The problem is mostly that the function needs to make a lookup somewhere if the table in question has a field with auto-incremeneted values... We have no solution yet to where this information can come from
- CLOBS/BLOBS: Update/Insert CLOBs/BLOBs in ux_t3lib_db::exec_INSERTquery()/ux_t3lib_db::exec_UPDATEquery() - this will probably be needed for some databases. In that case we will have to know which fields should be handled separately. It's unclear to me if this depends on field-type (eg. "blob" / "clob") or if it depends on the length of the input!

Portability "Jokers":
In Oracle I have experienced that an error occurs if you:
- Insert a "" quoted string in an integer/number field - even if the value inside is a number! - so will we have to make lookups on field type to determine this?
- Insert a string longer than the size of the field in the database (MySQL just silently accepts this...) - so will we have to evaluate all values in update/insert queries first?
- sum(), max(), min(), count(), avg() functions in select field list? Are those available in all other DBMS?
- simple table joins are used many places. Are those available in all other DBMS?

ADOdb/PEAR implementation issues:
- sql_fetch_assoc() and sql_fetch_row(): How will the behavior of associative keys be with other databases than MySQL? This is not solid enough yet.
- "free-result" in ADOdb? What is it?
- sql_insert_id(): For PEAR this is definitely not working with anything by MySQL!
- sql_data_seek(): For PEAR this seems to have no equalent. Must be simulated?
- sql_field_type(): Needs support for all but "native" mode.
- admin_get_tables() / admin_get_fields() / admin_get_keys(): Needs support in ADOdb and PEAR.

SQL parser issues:
- t3lib_sqlengine: Quoting of strings is done sensitive to DB, but the PARSING of SQL and re-assembling done with t3lib_sqlengine does NOT know about quoting format! This has to be solved for other databases than MySQL... "t3lib_sqlengine" has to support parsing AND compiling of queries with different quoting methods.

New Features?
- user processing hooks implemented on tables/fields etc.
- readOnly control on tables/handlers
- persistent connections configured as an option per handler?

General TODO:
- Implement and test other databases with ADOdb and PEAR
- Create any amount of management needed
- Create documentation for other databases
- Support for people implementing DBAL (I imagine there is a contact person per. DBMS implemented)







********************
APPENDIX: DBAL (moved to here from Core TODO.txt)
********************
Issues:
- Install tool, analysing SQL files, comparing, dumping etc. How? (MetaDatabase, MetaTables)
- case-folding?
- reserved words (uid!!) Which R-words?
- LIMIT. selectLimit(x,x)
- mysql_fetch_assoc substitute (seems to be there)
- escaping chars with special function!!!
- datatypes? Integer not there? LOB's a problem?
- Internal functions: AVG, SUM, count
- mysql_num_rows() = recordCount()
- autoinc. of numbers with GenID()
- how about joining?
- ALTER TABLE syntax?

Analysis:
- SUPPORT: Core (+ 'cms') will support all DBs, extension MAY support a SUBSET of DBs only.
- EM: MySQL will be the main supported database. sql-files for install tool follows MySQL syntax. Comparison can be done if ADOdb allows us to read table/field info (will need mapping of datatypes), updates may only be done if we support it. Not important. People CAN update manually with other DBs.
- NAMING: Reserved words and case restrictions are a real problem. For now, lets call it unacceptable. Handling of this would include 1) conversion table in ADOdb for result set assoc. key mapping AND mapping of fields in the queries!
- ESCAPING: Escaping characters will be very annoying because we'll have to pass an array first to stripslashes, then to add DB-specific slashes, then make Query. But we can for MySQL (and similar) bypass this...
- LOBs: Working with LOBs seems to be extremely irritating, inserting them separately (In oracle)!! How are we knowing anyways that this is a LOB? Solution might be to bypass for MySQL and for problem DBs send the UPDATE/INSERT row (must be array then!!!) through a filter which returns new row plus a blob row for update afterwards.
- AUTO-ID: Auto-incrementing is also a BIG irritation! Currently all inserts DO NOT set the id column!!! All insert statements must include the new, correct field (at least for the problem DB's like Oracle)
- BTW: Escaping and BLOB handling seems to require the same for all INSERTs and UPDATEs: A field_array passed to function. Auto-id may relate to this (at least it will be required all places ...)
- SQL: Will have to split up LIMIT selects. New escaping in SELECT queries. INSERT/UPDATE from field_arrays + processing, mysql_fetch_assoc() function "pandan"

API:
SELECT: 
- Separate LIMIT from the rest. 
- JOINS ? Functions like AVG, SUM?
- Escaping of search strings

UPDATE/INSERT:
- Array passed to function if not MySQL
  Function has: possible "autoincrement" field argument; If Oracle, auto-id is handled; If Oracle, BLOB-array is returned for separate insertion.


ORACLE does not allow us to CHANGE existing fields into something else - only create new fields, otherwise we must export/import database.

Other notes:
- Datatypes to use for integers and others? Date/Time not a problem because typo3 uses integers.
- AVG, SUM, COUNT - will they be there?
- I'll need access to Oracle, MSSQL, PostGres - basically the databases we are going to connect to!!!
- JOINS???
- Having some lookup table (not TCA, because this is very individual from site to site) telling us which database (name+brand+server) a table is coming from, if not the default database. This also means that we will have an array of databases set up (one being default)!

180303 / Oracle:
- all fields/tablenames must be quoted
- a quoted value cannot be inserted into an integerfield!!!


insert... "kasper"

Related issues: 
- LPE: DB/DB sync.

ORACLE / DB2:
- u: db2admin
- p: password

Also see:
- [Kasper] "DB Abstraction" folder in Mailbox 